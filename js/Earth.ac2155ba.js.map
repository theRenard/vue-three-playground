{"version":3,"sources":["webpack:///./src/views/earth/Earth.vue?c81f","webpack:///./src/views/earth/entities/Lights.ts","webpack:///./src/views/earth/entities/Earth.ts","webpack:///./src/views/earth/entities/Galaxy.ts","webpack:///./src/views/earth/entities/Clouds.ts","webpack:///./src/views/earth/Earth-Sketch.ts","webpack:///./src/views/earth/Earth.vue","webpack:///./src/views/earth/Earth.vue?076b","webpack:///./src/views/earth/Earth.vue?6b5c"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticRenderFns","name","ambientlight","getSketch","getScene","add","pointLight","position","set","Helper","remove","console","log","textures","earthmap1k","getLoaders","textureLoader","load","earthbump","earthGeometry","earthMaterial","map","bumpMap","bumpScale","earthMesh","rotation","y","dispose","galaxy","galaxyGeometry","galaxyMaterial","side","galaxyMesh","earthClouds","cloudsGeometry","cloudsMaterial","transparent","cloudsMesh","clouds","canvasEl","lights","earth","setEntity","getCamera","x","z","isReadyToRender","sketch","init","$el","destroy","component"],"mappings":"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","file":"js/Earth.ac2155ba.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('canvas')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Entity from '@/engines/Three/Three-Entity';\nimport {\n  AmbientLight, PointLight, PointLightHelper,\n} from 'three';\n\nexport default class Clouds extends Entity {\n  name = 'Lights';\n  ambientlight: AmbientLight;\n  pointLight: PointLight;\n  Helper: PointLightHelper;\n\n  init(): void {\n\n    // ambient light\n    this.ambientlight = new AmbientLight(0xffffff, 0.2);\n    this.getSketch().getScene().add(this.ambientlight);\n\n    // point light\n    this.pointLight = new PointLight(0xffffff, 1);\n    this.pointLight.position.set(5, 3, 5);\n    this.getSketch().getScene().add(this.pointLight);\n\n    // point light helper\n    this.Helper = new PointLightHelper(this.pointLight);\n    this.getSketch().getScene().add(this.Helper);\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-empty-function\n  update(): void {\n  }\n  destroy(): void {\n    this.getSketch().getScene().remove(this.ambientlight);\n    this.getSketch().getScene().remove(this.pointLight);\n    this.getSketch().getScene().remove(this.Helper);\n    console.log('removed lights');\n  }\n}\n","import Entity from '@/engines/Three/Three-Entity';\nimport {\n  Mesh, Texture, MeshPhongMaterial, SphereBufferGeometry,\n} from 'three';\n\nexport default class Earth extends Entity {\n  name: 'Earth';\n  earthGeometry: SphereBufferGeometry;\n  earthMaterial: MeshPhongMaterial;\n  earthMesh: Mesh;\n  textures: { [key: string]: Texture };\n\n  init(): void {\n\n    this.textures = {\n      earthmap1k: this.getSketch().getLoaders().textureLoader.load('./textures/earth/earthmap1k.jpg'),\n      earthbump: this.getSketch().getLoaders().textureLoader.load('./textures/earth/earthbump.jpg'),\n    };\n\n    this.earthGeometry = new SphereBufferGeometry(0.6, 32, 32);\n    // earth material\n    this.earthMaterial = new MeshPhongMaterial({\n      // roughness: 1,\n      // metalness: 0,\n      map: this.textures.earthmap1k,\n      bumpMap: this.textures.earthbump,\n      bumpScale: 0.3,\n    });\n    this.earthMesh = new Mesh(this.earthGeometry, this.earthMaterial);\n    this.getSketch().getScene().add(this.earthMesh);\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-empty-function\n  update(): void {\n    this.earthMesh.rotation.y -= 0.0015;\n  }\n  destroy(): void {\n    this.getSketch().getScene().remove(this.earthMesh);\n    this.earthGeometry.dispose();\n    this.earthMaterial.dispose();\n    this.textures.earthmap1k.dispose();\n    this.textures.earthbump.dispose();\n    console.log('removed Earth');\n  }\n}\n","import Entity from '@/engines/Three/Three-Entity';\nimport {\n  Mesh, Texture, SphereBufferGeometry, BackSide, MeshBasicMaterial,\n} from 'three';\n\nexport default class Earth extends Entity {\n  name = 'Earth';\n  galaxyGeometry: SphereBufferGeometry;\n  galaxyMaterial: MeshBasicMaterial;\n  galaxyMesh: Mesh;\n  textures: { [key: string]: Texture };\n\n  init(): void {\n\n    this.textures = {\n      galaxy: this.getSketch().getLoaders().textureLoader.load('./textures/earth/galaxy.png'),\n    };\n\n    this.galaxyGeometry = new SphereBufferGeometry(80, 64, 64);\n\n    // galaxy material\n    this.galaxyMaterial = new MeshBasicMaterial({\n      map: this.textures.galaxy,\n      side: BackSide,\n    });\n\n    // galaxy mesh\n    this.galaxyMesh = new Mesh(this.galaxyGeometry, this.galaxyMaterial);\n\n    this.getSketch().getScene().add(this.galaxyMesh);\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-empty-function\n  update(): void {\n    this.galaxyMesh.rotation.y -= 0.002;\n  }\n  destroy(): void {\n    this.getSketch().getScene().remove(this.galaxyMesh);\n    this.galaxyGeometry.dispose();\n    this.galaxyMaterial.dispose();\n    this.textures.galaxy.dispose();\n    console.log('removed Galaxy');\n  }\n}\n","import Entity from '@/engines/Three/Three-Entity';\nimport {\n  Mesh, Texture, SphereBufferGeometry, MeshPhongMaterial,\n} from 'three';\n\nexport default class Clouds extends Entity {\n  name: 'Clouds';\n  cloudsGeometry: SphereBufferGeometry;\n  cloudsMaterial: MeshPhongMaterial;\n  cloudsMesh: Mesh;\n  textures: { [key: string]: Texture };\n\n  init(): void {\n\n    this.textures = {\n      earthClouds: this.getSketch().getLoaders().textureLoader.load('./textures/earth/earthCloud.png'),\n    };\n\n    // cloud Geometry\n    this.cloudsGeometry = new SphereBufferGeometry(0.63, 32, 32);\n\n    // clouds metarial\n    this.cloudsMaterial = new MeshPhongMaterial({\n      map: this.textures.earthClouds,\n      transparent: true,\n    });\n\n    // clouds mesh\n    this.cloudsMesh = new Mesh(this.cloudsGeometry, this.cloudsMaterial);\n    this.getSketch().getScene().add(this.cloudsMesh);\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-empty-function\n  update(): void {\n    this.cloudsMesh.rotation.y -= 0.001;\n  }\n  destroy(): void {\n    this.getSketch().getScene().remove(this.cloudsMesh);\n    this.cloudsGeometry.dispose();\n    this.cloudsMaterial.dispose();\n    this.textures.clouds.dispose();\n    console.log('removed clouds');\n  }\n}\n","import Sketch from '@/engines/Three/Three';\nimport Lights from './entities/Lights';\nimport Earth from './entities/Earth';\nimport Galaxy from './entities/Galaxy';\nimport Clouds from './entities/Clouds';\n\nexport default class EarthSketch extends Sketch {\n\n  init(canvasEl: HTMLCanvasElement): void {\n    super.init(canvasEl, 'perspective');\n\n    const lights = new Lights();\n    const earth = new Earth();\n    const galaxy = new Galaxy();\n    const clouds = new Clouds();\n\n    this.setEntity(lights);\n    this.setEntity(earth);\n    this.setEntity(galaxy);\n    this.setEntity(clouds);\n\n    this.getCamera().position.x = 1;\n    this.getCamera().position.y = 1;\n    this.getCamera().position.z = 1;\n\n    this.isReadyToRender = true;\n  }\n\n}\n","\n\n\n\n\n\nimport { Vue, Component } from 'vue-property-decorator';\nimport EarthSketch from './Earth-Sketch';\n\n@Component\nexport default class Materials extends Vue {\n  sketch: EarthSketch;\n\n  mounted(): void {\n    this.sketch = new EarthSketch();\n    this.sketch.init(this.$el as HTMLCanvasElement);\n  }\n\n  beforeDestroy(): void {\n    this.sketch.destroy();\n  }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Earth.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Earth.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Earth.vue?vue&type=template&id=45d37e15&\"\nimport script from \"./Earth.vue?vue&type=script&lang=ts&\"\nexport * from \"./Earth.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}